<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ComponentModel.TypeConverter</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.ArrayConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Array" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ArrayConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.BaseNumberConverter">
      <summary>Fornisce un convertitore di tipi di base per i tipi numerici non in virgola mobile.</summary>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BaseNumberConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determina se questo convertitore può convertire un oggetto del tipo di origine specificato nel tipo nativo del convertitore.</summary>
      <returns>true se questo convertitore può eseguire l'operazione; in caso contrario false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">
        <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato, utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire l'operazione; in caso contrario false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="t">
        <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura per la rappresentazione del numero. </param>
      <param name="value">Oggetto da convertire. </param>
      <exception cref="T:System.Exception">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.BaseNumberConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura per la rappresentazione del numero. </param>
      <param name="value">Oggetto da convertire. </param>
      <param name="destinationType">Tipo in cui convertire l'oggetto. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.BooleanConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Boolean" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.BooleanConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto di tipo Boolean utilizzando il contesto specificato.</summary>
      <returns>true se l'oggetto è in grado di eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto di tipo Boolean.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura della conversione.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.ByteConverter">
      <summary>Fornisce un convertitore di tipi per la conversione di oggetti di tipo Integer senza segno a 8 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.ByteConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.ByteConverter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.CharConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti carattere Unicode in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.CharConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CharConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.CharConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto carattere Unicode utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.CharConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto carattere Unicode.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.CharConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato in un oggetto carattere Unicode utilizzando gli argomenti.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.CollectionConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti insieme in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.CollectionConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.Questo parametro deve ereditare da <see cref="T:System.Collections.ICollection" />.</param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.DateTimeConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.DateTime" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DateTimeConverter" />.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto <see cref="T:System.DateTime" /> utilizzando il contesto specificato.</summary>
      <returns>true se l'oggetto è in grado di eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione. </param>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.DateTime" />.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.DateTime" /> utilizzando gli argomenti.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.DateTimeOffsetConverter">
      <summary>Fornisce un convertitore di tipi per convertire le strutture <see cref="T:System.DateTimeOffset" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DateTimeOffsetConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se un oggetto del tipo di origine specificato può essere convertito in oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>true se il tipo specificato può essere convertito in <see cref="T:System.DateTimeOffset" />; in caso contrario, false.</returns>
      <param name="context">Contesto del formato data.</param>
      <param name="sourceType">Tipo di origine da verificare.</param>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Restituisce un valore che indica se <see cref="T:System.DateTimeOffset" /> può essere convertito in un oggetto del tipo specificato.</summary>
      <returns>true se <see cref="T:System.DateTimeOffset" /> può essere convertito nel tipo specificato; in caso contrario, false.</returns>
      <param name="context">Contesto del formato data.</param>
      <param name="destinationType">Tipo di destinazione da verificare.</param>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in oggetto <see cref="T:System.DateTimeOffset" />.</summary>
      <returns>Oggetto <see cref="T:System.DateTimeOffset" /> che rappresenta l'oggetto specificato.</returns>
      <param name="context">Contesto del formato data.</param>
      <param name="culture">Impostazioni cultura della data.</param>
      <param name="value">Oggetto da convertire.</param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="M:System.ComponentModel.DateTimeOffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte un oggetto <see cref="T:System.DateTimeOffset" /> in un oggetto del tipo specificato.</summary>
      <returns>Oggetto del tipo specificato che rappresenta <see cref="T:System.DateTimeOffset" />. </returns>
      <param name="context">Contesto del formato data.</param>
      <param name="culture">Impostazioni cultura della data.</param>
      <param name="value">Oggetto <see cref="T:System.DateTimeOffset" /> da convertire.</param>
      <param name="destinationType">Tipo in cui eseguire la conversione.</param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione.</exception>
    </member>
    <member name="T:System.ComponentModel.DecimalConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Decimal" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DecimalConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione. </param>
    </member>
    <member name="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.Decimal" /> utilizzando gli argomenti.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.ArgumentNullException">La proprietà <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.DoubleConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti numero a virgola mobile e precisione doppia in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.DoubleConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.DoubleConverter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.EnumConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Enum" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.EnumConverter" /> per il tipo specificato.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo di enumerazione da associare a questo convertitore di enumerazioni. </param>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto enumerazione utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione. </param>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto enumerazione.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> non è un valore valido per l'enumerazione. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="P:System.ComponentModel.EnumConverter.EnumType">
      <summary>Specifica il tipo di enumeratore a cui è associato il convertitore.</summary>
      <returns>Tipo di enumeratore a cui è associato il convertitore.</returns>
    </member>
    <member name="T:System.ComponentModel.GuidConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.Guid" /> in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.GuidConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto GUID utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione. </param>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto GUID.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.GuidConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo.</summary>
      <returns>Oggetto convertito.</returns>
      <param name="context">Contesto di un formattatore. </param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto da convertire. </param>
      <param name="destinationType">Tipo in cui convertire l'oggetto. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.Int16Converter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti di tipo Integer con segno a 16 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Int16Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Int16Converter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.Int32Converter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti di tipo Integer con segno a 32 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Int32Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Int32Converter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.Int64Converter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti di tipo Integer con segno a 64 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.Int64Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.Int64Converter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.ITypeDescriptorContext">
      <summary>Fornisce informazioni contestuali su un componente relative, ad esempio, al contenitore e al descrittore di proprietà.</summary>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Container">
      <summary>Ottiene il contenitore che rappresenta questa richiesta <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <returns>Un oggetto <see cref="T:System.ComponentModel.IContainer" /> imposta gli oggetti per questo oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />; in caso contrario, null in mancanza di contenitore o se l'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" /> non utilizza oggetti esterni.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.Instance">
      <summary>Ottiene l'oggetto connesso a questa richiesta di descrittore di tipi.</summary>
      <returns>Oggetto che richiama il metodo nell'oggetto <see cref="T:System.ComponentModel.TypeDescriptor" />; in caso contrario, null in mancanza di un oggetto responsabile della chiamata.</returns>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</summary>
    </member>
    <member name="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging">
      <summary>Genera l'evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</summary>
      <returns>true se questo oggetto può essere modificato. In caso contrario, false.</returns>
    </member>
    <member name="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
      <summary>Ottiene l'oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> associato all'elemento di contesto indicato.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> che descrive l'elemento di contesto indicato; in caso contrario, null in mancanza di un oggetto <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsabile della chiamata.</returns>
    </member>
    <member name="T:System.ComponentModel.MultilineStringConverter">
      <summary>Fornisce un convertitore di tipi per la conversione di stringhe su più righe in una stringa semplice.</summary>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.MultilineStringConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.MultilineStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo indicato, utilizzando le informazioni relative a contesto e impostazioni cultura specificate.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Interfaccia <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />.Se viene passato null verranno utilizzate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.NullableConverter">
      <summary>Fornisce la conversione automatica tra un tipo nullable e il relativo tipo primitivo sottostante.</summary>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.NullableConverter" />.</summary>
      <param name="type">Tipo nullable specificato.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> non è un tipo nullable.</exception>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Interfaccia <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione.</param>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire l'oggetto nel tipo specificato utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="destinationType">
        <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera effettuare la conversione.</param>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo di questo convertitore, utilizzando le informazioni sulle impostazioni cultura e il contesto specificati.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo indicato, utilizzando le informazioni relative a contesto e impostazioni cultura specificate.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire.</param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> in cui convertire il parametro valore.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null.</exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.NullableType">
      <summary>Ottiene il tipo nullable.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nullable.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.UnderlyingType">
      <summary>Ottiene il tipo sottostante.</summary>
      <returns>Oggetto <see cref="T:System.Type" /> che rappresenta il tipo sottostante.</returns>
    </member>
    <member name="P:System.ComponentModel.NullableConverter.UnderlyingTypeConverter">
      <summary>Ottiene il convertitore del tipo sottostante.</summary>
      <returns>Oggetto <see cref="T:System.ComponentModel.TypeConverter" /> che rappresenta il convertitore del tipo sottostante.</returns>
    </member>
    <member name="T:System.ComponentModel.PropertyDescriptor">
      <summary>Fornisce un'astrazione di una proprietà su una classe.</summary>
    </member>
    <member name="T:System.ComponentModel.SByteConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti integer a 8 bit senza segno in e da una stringa.</summary>
    </member>
    <member name="M:System.ComponentModel.SByteConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SByteConverter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.SingleConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti numero in virgola mobile a precisione singola in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.SingleConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.SingleConverter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.StringConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti stringa in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.StringConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.StringConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore è in grado di convertire un oggetto dal tipo di origine specificato in una stringa tramite il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto valore specificato in un oggetto <see cref="T:System.String" />.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare. </param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.TimeSpanConverter">
      <summary>Fornisce un convertitore di tipi per convertire oggetti <see cref="T:System.TimeSpan" /> in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TimeSpanConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se il convertitore può convertire un oggetto dal tipo di origine specificato in un oggetto <see cref="T:System.TimeSpan" /> utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione. </exception>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato in un oggetto <see cref="T:System.TimeSpan" />.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
      <exception cref="T:System.FormatException">
        <paramref name="value" /> non è un valore valido per il tipo di destinazione. </exception>
    </member>
    <member name="M:System.ComponentModel.TimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto specificato in un altro tipo. </summary>
      <returns>Oggetto convertito.</returns>
      <param name="context">Contesto di un formattatore. </param>
      <param name="culture">Le impostazioni cultura in cui <paramref name="value" /> verrà convertito.</param>
      <param name="value">Oggetto da convertire. </param>
      <param name="destinationType">Tipo in cui convertire l'oggetto. </param>
    </member>
    <member name="T:System.ComponentModel.TypeConverter">
      <summary>Rappresenta una soluzione unica per la conversione di tipi di valori in altri tipi, oltre che per l'accesso a sottoproprietà e valori standard.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverter" />. </summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
      <summary>Indica se questo convertitore può convertire un oggetto del tipo specificato nel tipo di questo convertitore.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="sourceType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo dal quale si desidera eseguire la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indica se questo convertitore può convertire l'oggetto nel tipo specificato utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">
        <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
      <summary>Indica se questo convertitore può convertire l'oggetto nel tipo specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="destinationType">
        <see cref="T:System.Type" /> che rappresenta il tipo nel quale si desidera effettuare la conversione. </param>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo di questo convertitore, utilizzando le informazioni sulle impostazioni cultura e il contesto specificati.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> da utilizzare come impostazioni cultura correnti. </param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
      <summary>Converte il valore specificato nel tipo di questo convertitore.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
      <summary>Converte la stringa specificata nel tipo di questo convertitore, utilizzando le impostazioni cultura invarianti.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <param name="text">Oggetto <see cref="T:System.String" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
      <summary>Converte il testo specificato in un oggetto, utilizzando il contesto specificato e le informazioni sulle impostazioni cultura.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />.Se viene passato null verranno utilizzate le impostazioni cultura correnti.</param>
      <param name="text">Oggetto <see cref="T:System.String" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
      <summary>Converte il testo specificato in un oggetto.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il testo convertito.</returns>
      <param name="text">Rappresentazione di testo dell'oggetto da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile convertire la stringa nell'oggetto appropriato. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo indicato, utilizzando le informazioni relative a contesto e impostazioni cultura specificate.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />.Se viene passato null verranno utilizzate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">
        <see cref="T:System.Type" /> in cui convertire il parametro <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo specificato, utilizzando gli argomenti.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">
        <see cref="T:System.Type" /> in cui convertire il parametro <paramref name="value" />. </param>
      <exception cref="T:System.ArgumentNullException">Il parametro <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa indipendente dalle impostazioni cultura.</summary>
      <returns>
        <see cref="T:System.String" /> che rappresenta il valore convertito.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa, utilizzando il contesto specificato e le informazioni sulle impostazioni cultura.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" />.Se viene passato null verranno utilizzate le impostazioni cultura correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
      <summary>Converte il valore specificato in una rappresentazione in formato stringa.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
      <summary>Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</summary>
      <returns>Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione da generare quando non è possibile eseguire una conversione.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire oppure null se l'oggetto non è disponibile. </param>
      <exception cref="T:System.NotSupportedException">Generata automaticamente da questo metodo. </exception>
    </member>
    <member name="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
      <summary>Restituisce un'eccezione da generare quando non è possibile eseguire una conversione.</summary>
      <returns>Oggetto <see cref="T:System.Exception" /> che rappresenta l'eccezione da generare quando non è possibile eseguire una conversione.</returns>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire oppure null se l'oggetto non è disponibile. </param>
      <param name="destinationType">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo nel quale si cerca di eseguire la conversione. </param>
      <exception cref="T:System.NotSupportedException">Generata automaticamente da questo metodo. </exception>
    </member>
    <member name="T:System.ComponentModel.TypeConverterAttribute">
      <summary>Specifica il tipo da utilizzare come convertitore per l'oggetto a cui l'attributo è associato.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</summary>
      <param name="typeName">Nome completo della classe da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo. </param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeConverterAttribute" />, utilizzando il nome del tipo specificato come convertitore di dati per l'oggetto a cui è associato questo attributo.</summary>
      <param name="type">Oggetto <see cref="T:System.Type" /> che rappresenta il tipo della classe del convertitore da utilizzare per la conversione dei dati per l'oggetto a cui è associato questo attributo. </param>
    </member>
    <member name="P:System.ComponentModel.TypeConverterAttribute.ConverterTypeName">
      <summary>Ottiene il nome di tipo completo dell'oggetto <see cref="T:System.Type" /> da utilizzare come convertitore per l'oggetto a cui è associato questo attributo.</summary>
      <returns>Nome di tipo completo dell'oggetto <see cref="T:System.Type" /> da utilizzare come convertitore per l'oggetto a cui è associato questo attributo o, in mancanza, una stringa vuota ("").Il valore predefinito è una stringa vuota ("").</returns>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.Equals(System.Object)">
      <summary>Specifica se il valore dell'oggetto specificato è uguale all'oggetto <see cref="T:System.ComponentModel.TypeConverterAttribute" /> corrente.</summary>
      <returns>true se il valore dell'oggetto specificato è uguale a quello dell'oggetto corrente <see cref="T:System.ComponentModel.TypeConverterAttribute" />; in caso contrario, false.</returns>
      <param name="obj">Oggetto di cui va verificata l'uguaglianza di valore. </param>
    </member>
    <member name="M:System.ComponentModel.TypeConverterAttribute.GetHashCode">
      <summary>Restituisce il codice hash per l'istanza.</summary>
      <returns>Codice hash per la classe <see cref="T:System.ComponentModel.TypeConverterAttribute" /> corrente.</returns>
    </member>
    <member name="T:System.ComponentModel.TypeDescriptor">
      <summary>Fornisce informazioni sulle caratteristiche di un componente, quali attributi, proprietà ed eventi.La classe non può essere ereditata.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
      <summary>Restituisce un convertitore di tipi per il tipo specificato.</summary>
      <returns>
        <see cref="T:System.ComponentModel.TypeConverter" /> per il tipo specificato.</returns>
      <param name="type">Oggetto <see cref="T:System.Type" /> del componente di destinazione. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> è null. </exception>
    </member>
    <member name="T:System.ComponentModel.TypeListConverter">
      <summary>Fornisce un convertitore di tipi che può essere utilizzato per inserire i tipi disponibili in una casella di riepilogo.</summary>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.TypeListConverter" /> utilizzando la matrice dei tipi per i tipi disponibili.</summary>
      <param name="types">Matrice di tipo <see cref="T:System.Type" /> da utilizzare per i tipi disponibili. </param>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire il tipo <see cref="T:System.Type" /> specificato dell'oggetto di origine utilizzando il contesto specificato.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato.</param>
      <param name="sourceType">Tipo <see cref="T:System.Type" /> dell'oggetto di origine.</param>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Ottiene un valore che indica se questo convertitore può convertire un oggetto nel tipo di destinazione specificato utilizzando il contesto.</summary>
      <returns>true se questo convertitore può eseguire la conversione; in caso contrario, false.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> che rappresenta il tipo di destinazione della conversione. </param>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converte l'oggetto specificato nel tipo nativo del convertitore.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta il valore convertito.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> che specifica le impostazioni cultura utilizzate per rappresentare il tipo di carattere. </param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
    </member>
    <member name="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converte l'oggetto valore specificato nel tipo di destinazione specificato.</summary>
      <returns>Oggetto <see cref="T:System.Object" /> che rappresenta la conversione di <paramref name="value" />.</returns>
      <param name="context">Oggetto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> che fornisce un contesto di formato. </param>
      <param name="culture">Oggetto <see cref="T:System.Globalization.CultureInfo" /> facoltativo.Se non vengono specificate le impostazioni cultura, vengono utilizzate quelle correnti.</param>
      <param name="value">Oggetto <see cref="T:System.Object" /> da convertire. </param>
      <param name="destinationType">Tipo <see cref="T:System.Type" /> in cui convertire il valore. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> è null. </exception>
      <exception cref="T:System.NotSupportedException">Impossibile eseguire la conversione. </exception>
    </member>
    <member name="T:System.ComponentModel.UInt16Converter">
      <summary>Fornisce un convertitore di tipi per la conversione di oggetti di tipo Integer senza segno a 16 bit in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt16Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.UInt16Converter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.UInt32Converter">
      <summary>Fornisce un convertitore di tipi per la conversione di oggetti di tipo Integer senza segno a 32 bit in e da diverse altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt32Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.UInt32Converter" />. </summary>
    </member>
    <member name="T:System.ComponentModel.UInt64Converter">
      <summary>Fornisce un convertitore di tipi per la conversione di oggetti di tipo Integer senza segno a 64 bit in e da altre rappresentazioni.</summary>
    </member>
    <member name="M:System.ComponentModel.UInt64Converter.#ctor">
      <summary>Inizializza una nuova istanza della classe <see cref="T:System.ComponentModel.UInt64Converter" />. </summary>
    </member>
  </members>
</doc>